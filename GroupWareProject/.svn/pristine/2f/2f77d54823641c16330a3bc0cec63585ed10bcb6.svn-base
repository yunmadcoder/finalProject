<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- 6. 사용자 정의 접근 거부 처리자 추가 -->
	<bean id="customAccessDenied" class="kr.or.ddit.groupware.security.CustomAccessDeniedHandler" />
	<!-- 8. 로그인 성공 처리 -->
	<bean id="customLoginSuccess" class="kr.or.ddit.groupware.security.CustomLoginSuccessHandler" />
	<!-- 11. 사용자 테이블 이용한 인증/인가 처리 -->
	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	<!-- 12. UserDetailsService 재정의 -->
	<bean id="customUserDetailsService" class="kr.or.ddit.groupware.security.CustomUserDetailsService"/>
	
	<security:http>
		<!-- 8. 로그인 성공 처리 : 로그인 성공 후 처리를 담당하는 처리자로 지정한다 -->
		<security:form-login login-page="/login" 
		authentication-success-handler-ref="customLoginSuccess" />
		
		<!-- 6. 사용자 정의 접근 거부 처리자 -->
		<security:access-denied-handler ref="customAccessDenied"/>
		
		<!-- 
			14. 자동 로그인 적용
			- 데이터 소스를 지정하고 테이블을 이용해서 기존 로그인 정보를 기록 
			- 쿠키의 유효시간을 지정한다. (604800 : 7일)
		-->
		<security:remember-me data-source-ref="dataSource" token-validity-seconds="604800" />
		
		<!-- 
			로그아웃 처리를 위한 URI를 지정하고, 로그아웃한 후에 세션을 무효화한다. 
			logout-url : 시큐리티에서 제공하는 default 로그아웃 처리 URI는 '/logout'
			로그아웃이 정상적으로 이루어졌다면 /login 로그인 페이지로 이동한다.
			/login?logout >> 로그인 페이지에서는 logout 정보에 logout이 메세지로 나타난다	
		-->
		<security:logout logout-url="/logout" 
				logout-success-url="/login" 
				invalidate-session="true" 
				delete-cookies="remember-me, JSESSION_ID"/>
				
	</security:http>
	
	<security:authentication-manager>
		<!-- 저장된 아이디와 패스워드로 로그인이 가능하도록 설정한다. -->
		<security:authentication-provider user-service-ref="customUserDetailsService"> <!-- 12. UserDetailsService 재정의 -->
				<security:password-encoder ref="bcryptPasswordEncoder"/>
		</security:authentication-provider>
	</security:authentication-manager>
	
</beans>
