<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="http://www.springframework.org/security/tags" prefix="sec"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn"%>
<style>
/* textarea의 크기를 조정합니다. */
textarea {
	width: calc(100% - 20px); /* 가로 크기: 부모 요소의 너비에서 20px만큼 빼서 꽉 차게 설정 */
	max-width: 100%; /* 최대 가로 너비는 부모 요소의 너비 */
	height: 100px; /* 세로 크기: 100px */
}

.replyInput {
	/* 	  position: relative; /* 요소의 위치를 상대적으로 설정합니다. */ */
	/*   top: 50px; /* 원하는 위치로 이동합니다. */ */
	
}
</style>
<div class="card bg-info-subtle shadow-none position-relative overflow-hidden mb-4">
	<div class="card-body px-4 py-3">
		<div class="row align-items-center">
			<div class="col-9">
				<h4 class="fw-semibold mb-8">Blog Detail</h4>
				<nav aria-label="breadcrumb">
					<ol class="breadcrumb">
						<li class="breadcrumb-item"><a class="text-muted text-decoration-none" href="../main/index.html">Home</a></li>
						<li class="breadcrumb-item" aria-current="page">Blog Detail</li>
					</ol>
				</nav>
			</div>
			<div class="col-3">
				<div class="text-center mb-n5">
					<img src="${pageContext.request.contextPath}/resources/vendor/images/breadcrumb/ChatBc.png" alt="" class="img-fluid mb-n4" />
				</div>
			</div>
		</div>
	</div>
</div>

<div class="card rounded-2 overflow-hidden">
	<div class="position-relative">
		<a href="javascript:void(0)">
			<img src="${pageContext.request.contextPath}/resources/vendor/images/blog/blog-img5.jpg" class="card-img-top rounded-0 object-fit-cover" alt="..." height="440">
		</a>
		<span class="badge text-bg-light fs-2 rounded-4 lh-sm mb-9 me-9 py-1 px-2 fw-semibold position-absolute bottom-0 end-0">2 min Read</span>
		<img src="${pageContext.request.contextPath}/resources/vendor/images/profile/user-2.jpg" alt="" class="img-fluid rounded-circle position-absolute bottom-0 start-0 mb-n9 ms-9" width="40" height="40" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Esther Lindsey">
	</div>
	<div class="card-body p-4">
		<span class="badge text-bg-light fs-2 rounded-4 py-1 px-2 lh-sm  mt-3">카테고리</span>
		<h2 class="fs-9 fw-semibold my-4">${boardVO.bbscttTitle }</h2>
		<div class="d-flex align-items-center gap-4">
			<div class="d-flex align-items-center gap-2">
				<i class="ti ti-eye text-dark fs-5">${boardVO.bbscttRdcnt }</i>
			</div>
			<div class="d-flex align-items-center gap-2">
				<i class="ti ti-message-2 text-dark fs-5">댓글수?</i>
			</div>
			<div class="d-flex align-items-center fs-2 ms-auto">
				<i class="ti ti-point text-dark">${boardVO.rgsde }</i>
			</div>
		</div>
	</div>
	<div class="card-body border-top p-4">
		<p class="mb-3">${boardVO.bbscttCn }</p>
		<hr />
		<c:set value="${atchFileList}" var="atchFileList" />
		<c:if test="${not empty atchFileList }">
			<div class="col-md-12">
				<div class="row">
					<div class="d-flex justify-content-start">
						<c:forEach items="${atchFileList }" var="boardFile">
							<p class="mb-0 text-xs font-weight-bolder text-info text-uppercase">
								<button type="button" class="btn btn-primary btn-sm fileDownload ms-2" data-file-no="${boardFile.atchFilePath }" title="다운로드">
									<h6>${boardFile.atchFileOrnlFileNm }(${boardFile.atchFileFancysize })</h6>
								</button>
							</p>
						</c:forEach>
					</div>
				</div>
			</div>
		</c:if>
	</div>
</div>

<div class="card">
	<div class="card-body">
		<h4 class="mb-4 fw-semibold">댓글 작성</h4>
		<input type="hidden" name="answerBbscttNo" id="answerBbscttNo" value="${boardVO.bbscttNo }" />
		<textarea class="form-control mb-4" name="content" id="content" rows="5"></textarea>
		<button type="button" class="btn btn-primary" id="answerBtn">작성하기</button>
		<sec:csrfInput />
		<div class="d-flex align-items-center gap-3 mb-4 mt-7 pt-8">
			<h4 class="mb-0 fw-semibold">댓글</h4>
			<span class="badge bg-primary-subtle text-primary fs-4 fw-semibold px-6 py-8 rounded">달린 댓글 수</span>
		</div>

		<div class="position-relative" id="answerList">
			<c:forEach items="${answerList }" var="answer">
				<c:if test="${answer.delYn eq 'N' }">
					<div class="p-4 rounded-2 text-bg-light mb-3" id="answerArea">
						<div class="d-flex align-items-center gap-3">
							<img src="${pageContext.request.contextPath}/resources/vendor/images/profile/user-3.jpg" alt="" class="rounded-circle" width="33" height="33">
							<h6 class="fw-semibold mb-0 fs-4">${answer.answerNm }</h6>
							<span class="p-1 text-bg-muted rounded-circle d-inline-block"></span>
						</div>
						<div id="answerContent">
							<p class="my-3">${answer.replyCn }</p>
						</div>
						<c:if test="${employee.emplNo eq answer.emplNo}">
							<button type="button" class="btn btn-primary" id="answerUpdateBtn" data-answer-no="${answer.answerNo }" data-del-yn="${answer.delYn }">수정하기</button>
							<button type="button" class="btn btn-primary" id="answerDeleteBtn" data-answer-no="${answer.answerNo }" data-del-yn="${answer.delYn }">삭제하기</button>
						</c:if>

						<div class="d-flex align-items-center gap-2">
							<a class="d-flex align-items-center justify-content-center text-bg-primary p-2 fs-4 rounded-circle reply" href="javascript:void(0)" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Reply" data-answerno="${answer.answerNo }">
								<i class="ti ti-arrow-back-up"></i>
							</a>
						</div>
					</div>
				</c:if>
			</c:forEach>
		</div>

<%-- 		<c:forEach items="${replyList }" var="replyList"> --%>
<!-- 			<div class="p-4 rounded-2 text-bg-light mb-3 ms-7" id="replyList"> -->
<!-- 				<span>asdasd</span> -->
<!-- 				<div class="d-flex align-items-center gap-3"> -->
<%-- 					<img src="${pageContext.request.contextPath}/resources/vendor/images/profile/user-5.jpg" alt="" class="rounded-circle" width="40" height="40"> --%>
<!-- 					<h6 class="fw-semibold mb-0 fs-4">작성자</h6> -->
<!-- 					<span class="p-1 text-bg-muted rounded-circle d-inline-block"></span> -->
<!-- 				</div> -->
<!-- 				<p class="my-3">대댓글</p> -->
<!-- 			</div> -->
<%-- 		</c:forEach> --%>

		<div class="p-4 rounded-2 text-bg-light">
			<div class="d-flex align-items-center gap-3">
				<img src="${pageContext.request.contextPath}/resources/vendor/images/profile/user-6.jpg" alt="" class="rounded-circle" width="33" height="33">
				<h6 class="fw-semibold mb-0 fs-4">Seth Ortiz</h6>
				<span class="p-1 text-bg-muted rounded-circle d-inline-block"></span>
			</div>
			<p class="my-3">Icme rasejmat ciwo ifekemug owoca vicoz ukikitus famiftat nuk eroewu za upe. Pobrikvup kivofvac tuba ot veh ozoab sa gesi hahoniha hop burbip volo hufotobo di uted vojoamu.</p>
			<div class="d-flex align-items-center gap-2">
				<a class="d-flex align-items-center justify-content-center text-bg-primary p-2 fs-4 rounded-circle" href="javascript:void(0)" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Reply">
					<i class="ti ti-arrow-back-up"></i>
				</a>
			</div>
		</div>
	</div>
</div>


<button type="submit" class="btn btn-dark" id="listBtn">목록</button>
<button type="button" id="modifyBtn" class="btn btn-dark">수정</button>
<input type="button" id="deleteBtn" class="btn btn-danger" data-bbscttno="${boardVO.bbscttNo}" value="삭제">
<form action="board/delete" method="post" id="delForm">
	<input type="hidden" name="bbscttNo" id="bbscttNo" value="${boardVO.bbscttNo }" />
	<sec:csrfInput />
</form>
<script type="text/javascript">
	$(function() {
		var listBtn = $("#listBtn");
		let modifyBtn = $('#modifyBtn');
		let deleteBtn = $('#deleteBtn');
		let delForm = $('#delForm');
		let answerBtn = $('#answerBtn');
		let answer = $('#answer');
		let target = $("#answerContent");
		let answerUpdateBtn = $("#answerUpdateBtn");
		let answerArea = $("#answerArea");

		listBtn.on("click", function() {
			location.href = "/board";
		});

		modifyBtn.on('click', function() {
			delForm.attr('method', 'get');
			delForm.attr('action', 'update');
			delForm.submit();
		});

		deleteBtn.on('click', function() {
			if (confirm('정말로 삭제하시겠습니까?')) {
				var bbscttNo = $(this).data('bbscttno');

				$.ajax({
					url : '/board/delete?bbscttNo=' + bbscttNo,
					type : 'POST', // POST 메서드 사용
					beforeSend : function(xhr) {
						xhr.setRequestHeader(header, token);
					},
					success : function(response) {
						console.log('삭제되었습니다.');
						location.href = '/board';
					},
					error : function(xhr, status, error) {
						console.error('삭제 중 오류가 발생했습니다.');
						console.error(xhr.responseText);
					}
				});
			}
		});

		$(".fileDownload").on(
				"click",
				function() {
					var filepath = $(this).data("file-no");
					console.log(filepath);
					location.href = "/download?path=" + filepath
							+ "&${_csrf.parameterName}=${_csrf.token}";
				});

		answerBtn.on('click', function() {

			var bbscttNo = $('input[name="answerBbscttNo"]').val();
			var content = $('#content').val();
			var answerNo = $('#content').val();
			var data = {
				bbscttNo : bbscttNo,
				replyCn : content,
			};

			$.ajax({

				url : '/answer/insert',
				type : 'POST',
				data : JSON.stringify(data),
				contentType : 'application/json; charset=utf-8',
				beforeSend : function(xhr) {
					xhr.setRequestHeader(header, token);
				},
				success : function(response) {
					// 	                location.href = '/board/detail?bbscttNo=' + bbscttNo;
					//댓글 div 영역을 동적으로 추가
					$('#content').val('')
					selectAnswer();
					console.log("성공");

				},
				error : function(xhr, status, error) {
					console.error('댓글 작성중 오류가 발생했습니다.');
					console.error(xhr.responseText);
				}

			});
		});
		
		var pno ;
		$(document).ready(function() {
		var isReplyButtonCreated = false;
			// 대댓글 버튼을 클릭 시,
			$("#answerList").on("click",".reply",function() {
				var thisClass = $(this).attr("class");
				
				if(thisClass.includes("open")){
					$(this).parent("div").find(".replyDiv").remove();
					$(this).parent("div").find(".replyContArea").remove();
					$(this).removeClass("open");
				}else{
					pno = $(this).data("answerno");
					selectReply($(this).parent("div"));
					var html = "";
					html += "<div class='replyDiv'></div>";
					html += "<div class='replyContArea' style='margin-top: 10px;' >";
					html += "<textarea class=' replyInput' cols='50' rows='4' placeholder='댓글을 작성해주세요...' name='replyTextarea'></textarea>";
					html += "<button type='button' class='btn btn-primary replyInpBtn' data-no='"+pno+"'>등록</button>";
					html += "</div>";
					html += '<a class="d-flex align-items-center justify-content-center text-bg-primary p-2 fs-4 rounded-circle reply open" href="javascript:void(0)" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Reply" data-answerno="'+pno+'">';
					html += '  <i class="ti ti-arrow-back-up"></i>';
					html += '</a>';
					
					$(this).parent("div").html(html);
				}
			});

			// 대댓글 입력 후 등록 버튼 클릭 시,
			$("#answerList").on("click",".replyInpBtn",function(e) {
				// 댓글 작성 내용을 가져옵니다.
				var content = $(this).prev().val();
				// 게시글 번호를 가져옵니다.
				var bbscttNo = $('input[name="answerBbscttNo"]').val();
				// 댓글 번호를 가져옵니다.
				var pno = $(this).data("no");
				// AJAX 호출을 수행합니다.
				$.ajax({
					url : '/answer/insert2',
					type : 'POST',
					data : JSON.stringify({
						bbscttNo : bbscttNo,
						replyCn : content,
						upperAnswerNo : pno
					// 댓글 번호를 데이터에 추가합니다.
					}),
					contentType : 'application/json; charset=utf-8',
					beforeSend : function(xhr) {
						xhr.setRequestHeader(header,token);
					},
					success : function(response) {
						// 댓글이 성공적으로 등록되면 textarea를 비웁니다.
						$(".replyInput").val('');
						selectReply($(e.target).parent().parent("div"));
						console.log("성공");
						
					},
					error : function(xhr,status,error) {
						// 댓글 작성에 실패했을 때의 동작을 정의합니다.
						console.error('댓글 작성중 오류가 발생했습니다.');
						console.error(xhr.responseText);
					}
				});
			});
		});

		function selectAnswer() {
			var bbscttNo = $('input[name="answerBbscttNo"]').val();
			$.ajax({
				url : '/answer?bbscttNo=' + bbscttNo,
				type : 'get',
				contentType : "application/json; charset=utf-8",
				beforeSend : function(xhr) {
					xhr.setRequestHeader(header, token);
				},
				success : function(response) {
					let str = "";
					if (response != null) {
						console.log("성공");
						for (var i = 0; i < response.length; i++) {
							
							str += '<div class="p-4 rounded-2 text-bg-light mb-3" id="replyList" data-upper-answer-no="'+response[i].upperAnswerNo+'">';
							str += '	<div class="d-flex align-items-center gap-3">';
							str += '			<img src="${pageContext.request.contextPath}/resources/vendor/images/profile/user-3.jpg" alt="" class="rounded-circle" width="33" height="33">';
							str += '			<h6 class="fw-semibold mb-0 fs-4">';
							str += '			<div>' + response[i].answerNm
									+ '</div>';
							str += '			</h6>';
							str += '			<span class="p-1 text-bg-muted rounded-circle d-inline-block"></span>';
							str += '		</div>';
							str += '		<p class="my-3">'
									+ response[i].replyCn + '</p>';
									
									
							if (response[i].emplNo === response[i].emplNo) {
								str += '		<div class="d-flex align-items-center gap-2">';
								str += '			<button type="button" class="btn btn-primary" id="answerUpdateBtn" data-answer-no="'+response[i].answerNo+'" data-del-yn="'+response[i].delYn+'" >수정하기</button>';
								str += '			<button type="button" class="btn btn-primary" id="answerDeleteBtn" data-answer-no="'+response[i].answerNo+'" data-del-yn="'+response[i].delYn+'" >삭제하기</button>';
								str += '		</div>';
							}

							str += '		<div class="d-flex align-items-center gap-2">';
							str += '			<a class="d-flex align-items-center justify-content-center text-bg-primary p-2 fs-4 rounded-circle reply" href="javascript:void(0)" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Reply" data-answerno="'
									+ response[i].answerNo + '">';
							str += '				<i class="ti ti-arrow-back-up"></i>';
							str += '			</a>';
							str += '		</div>';
							str += '	</div>';
						}
						console.log(response);
					}
					$("#answerList").html(str);
				},
				error : function(xhr, status, error) {
					console.error('오류');
					console.error(xhr.responseText);

				}
			});
		}

		function selectReply(ele) {
			var bbscttNo = $('input[name="answerBbscttNo"]').val();
			var upperAnswerNo = pno;
			let str = "";
			$.ajax({
				url : '/answer/reply?upperAnswerNo=' + upperAnswerNo,
				type : 'get',
				contentType : "application/json; charset=utf-8",
				beforeSend : function(xhr) {
					xhr.setRequestHeader(header, token);

				},
				success : function(response) {
					if (response != null) {
						for (var i = 0; i < response.length; i++) {
							str += '<div class="p-4 rounded-2 text-bg-light mb-3 ms-7" style="position:relative;">';
							str += '	<div class="d-flex align-items-center gap-3">';
							str += '		<img src="${pageContext.request.contextPath}/resources/vendor/images/profile/user-5.jpg" alt="" class="rounded-circle" width="40" height="40">';
							str += '		<h6 class="fw-semibold mb-0 fs-4">'+ response[i].answerNm + '</h6>';
							str += '		<span class="p-1 text-bg-muted rounded-circle d-inline-block"></span>';
							str += '	</div>';
							str += '	<p class="my-3" id="replyContent">'+ response[i].replyCn + '</p>';
							
							if(${employee.emplNo} == response[i].emplNo){
								str +=	'<button type="button" class="btn btn-primary" id="replyUpdateBtn" data-answer-no="'+response[i].answerNo+'">수정하기</button>';
								str +=	'<button type="button" class="btn btn-primary" id="replyDeleteBtn" data-answer-no="'+response[i].answerNo+'">삭제하기</button>';
			 				}
							str += '</div>';
						}
					}
					$(ele).find(".replyDiv").html(str);
				},
				error : function(xhr, status, error) {
					console.error('오류');
					console.error(xhr.responseText);
				}
			});
		}
		$(function() {
			// 대댓글 수정버튼을 눌렀을떄
			$(document).on('click','#replyUpdateBtn',function() {
				// textarea가 있는지 확인
				if ($('.replyDiv textarea').length === 0) {
					console.log($('.replyDiv textarea'));
					//댓글 내용 가져오기
// 					var content = $(this).prev().val();
// 					var content = $('#replyContent').text();
					var content = $(this).closest('.p-4').find('#replyContent').text();
					console.log("#1"+content);
					var answerNo = $('#replyUpdateBtn').data('answerNo');
					console.log("#2"+answerNo);
					var textarea =$('<textarea class="form-control mb-4" id="ta" data-answer-no="'+answerNo+'" rows="5" style="text-align: left;">'
							+ content + '</textarea>');
					console.log("#3",textarea);
					var saveButton = $('<button class="btn btn-primary">Save</button>');
					console.log("#4",saveButton);
					
					var cancelButton = $('<button class="btn btn-primary">Cancel</button>');
					console.log("#5",cancelButton);
					
					// textarea와 버튼을 answerArea에 추가
					$('.replyDiv').append(textarea).append(saveButton).append(cancelButton);
					console.log("#6",$('.replyDiv'));
					
					
					
					saveButton.on('click',function(){
						var editedContent = textarea.val();
						var upperAnswerNo = pno;
						var data = {
								replyCn:editedContent,
								upperAnswerNo: upperAnswerNo,
								answerNo: answerNo
						};
						console.log("###"+data);
						// 수정된 내용을 해당 위치에 저장하는 작업 수행 (예: 서버로 전송)
						$('#replyContent').text(editedContent);
						
						// 여기서 수정된 내용을 서버로 전송할 수 있습니다.
						$.ajax({
							url : '/answer/update2', // 수정 요청을 처리하는 서버 엔드포인트
							method : 'POST', // POST 요청
							data : JSON.stringify(data), // 수정된 내용을 데이터로 전송
							contentType : "application/json; charset=utf-8",
							beforeSend : function(xhr) {
								xhr.setRequestHeader(header,token);
							},
							success : function(response) {
								// 성공적으로 처리된 경우
								console.log('댓글이 성공적으로 업데이트되었습니다.');
								// selectAnswer();
							},
							error : function(xhr,status,error) {
								// 오류가 발생한 경우
								console.error('댓글 업데이트 중 오류가 발생했습니다.');
								console.error(xhr.responseText);
							}
						});
							// 이후에는 서버로부터 응답을 받아서 UI를 업데이트할 수 있습니다.

							// textarea와 버튼 제거
							textarea.remove();
							saveButton.remove();
							cancelButton.remove();
						});
		
							// 취소 버튼 클릭 이벤트 핸들러
						cancelButton.on('click', function() {
							// textarea에 원래 있던 내용으로 복원
							textarea.val(content);

							// textarea와 버튼 제거
							textarea.remove();
							saveButton.remove();
							cancelButton.remove();
						});
					}
				});
			
			$(document).on('click', "#replyDeleteBtn", function(e) {
				var answerNo = $(this).data('answerNo');
				var data = {
					answerNo : answerNo
				};

				$.ajax({
					url : '/answer/delete2', // 삭제 요청을 처리하는 서버 엔드포인트
					method : 'POST', // POST 요청
					data : JSON.stringify(data), // 수정된 내용을 데이터로 전송
					contentType : "application/json; charset=utf-8",
					beforeSend : function(xhr) {
						xhr.setRequestHeader(header, token);

					},
					success : function(response) {
						// 성공적으로 처리된 경우
						console.log('댓글이 성공적으로 삭제되었습니다.');
						// location.href = "/board/detail?bbscttNo=${boardVO.bbscttNo }";
						selectReply($(e.target).parent().parent("div"));
					},
					error : function(xhr, status, error) {
						// 오류가 발생한 경우
						console.error('댓글 삭제 중 오류가 발생했습니다.');
						console.error(xhr.responseText);
					}
				});
			});
			
			});//

		let isTextareaCreated = false; // textarea가 생성되었는지 여부를 나타내는 변수
		let isEditButtonCreated = false; // 수정 버튼이 생성되었는지 여부를 나타내는 변수
		let editButton; // 수정 버튼을 전역 변수로 선언
		let cancelButton; // 취소 버튼을 전역 변수로 선언

		$(function() {
			// 수정 버튼 클릭 이벤트 핸들러
			$('#answerUpdateBtn').on('click',function() {
				// 이미 textarea와 버튼이 생성되어 있는지 확인
				if ($('#answerArea textarea').length === 0) {
					// 현재 댓글 내용 가져오기
					var originalContent = $('#answerContent').text();
	
					let answerNo = $('#answerUpdateBtn').data('answerNo');
	
					// textarea 생성
					var textarea = $('<textarea class="form-control mb-4" id="ta" data-answer-no="'+answerNo+'" rows="5" style="text-align: left;">'
							+ originalContent + '</textarea>');
					// 저장 버튼 생성
					var saveButton = $('<button class="btn btn-primary">Save</button>');
					// 취소 버튼 생성
					var cancelButton = $('<button class="btn btn-danger">Cancel</button>');
	
					// textarea와 버튼을 answerArea에 추가
					$('#answerArea').append(textarea).append(saveButton).append(cancelButton);

					// 저장 버튼 클릭 이벤트 핸들러
					saveButton.on('click',function() {
					// 수정된 내용 가져오기
					var editedContent = textarea.val();
					var bbscttNo = $('input[name="answerBbscttNo"]').val();
					var data = {
						bbscttNo : bbscttNo,
						replyCn : editedContent,
						answerNo : answerNo
					};

					// 수정된 내용을 해당 위치에 저장하는 작업 수행 (예: 서버로 전송)
					$('#answerContent').text(editedContent);

					// 여기서 수정된 내용을 서버로 전송할 수 있습니다.
					$.ajax({
						url : '/answer/update', // 수정 요청을 처리하는 서버 엔드포인트
						method : 'POST', // POST 요청
						data : JSON.stringify(data), // 수정된 내용을 데이터로 전송
						contentType : "application/json; charset=utf-8",
						beforeSend : function(xhr) {
							xhr.setRequestHeader(header,token);
						},
						success : function(response) {
							// 성공적으로 처리된 경우
							console.log('댓글이 성공적으로 업데이트되었습니다.');
							// selectAnswer();
						},
						error : function(xhr,status,error) {
							// 오류가 발생한 경우
							console.error('댓글 업데이트 중 오류가 발생했습니다.');
							console.error(xhr.responseText);
						}
					});
						// 이후에는 서버로부터 응답을 받아서 UI를 업데이트할 수 있습니다.

						// textarea와 버튼 제거
						textarea.remove();
						saveButton.remove();
						cancelButton.remove();
					});
	
						// 취소 버튼 클릭 이벤트 핸들러
						cancelButton.on('click', function() {
							// textarea에 원래 있던 내용으로 복원
							textarea.val(originalContent);

							// textarea와 버튼 제거
							textarea.remove();
							saveButton.remove();
							cancelButton.remove();
						});
					}
				});

			
			
			$('#answerList').on('click', "#answerDeleteBtn", function() {
				let answerNo = $(this).data('answerNo');
				var bbscttNo = $('input[name="answerBbscttNo"]').val();
				var delYn = $('#answerDeleteBtn').data('delYn');
				var data = {
					bbscttNo : bbscttNo,
					answerNo : answerNo,
					delYn : delYn
				};

				console.log(answerNo);
				console.log(bbscttNo);
				console.log(delYn);
				console.log(data);
				$.ajax({
					url : '/answer/delete', // 삭제 요청을 처리하는 서버 엔드포인트
					method : 'POST', // POST 요청
					data : JSON.stringify(data), // 수정된 내용을 데이터로 전송
					contentType : "application/json; charset=utf-8",
					beforeSend : function(xhr) {
						xhr.setRequestHeader(header, token);

					},
					success : function(response) {
						// 성공적으로 처리된 경우
						console.log('댓글이 성공적으로 삭제되었습니다.');
						// location.href = "/board/detail?bbscttNo=${boardVO.bbscttNo }";
						selectAnswer();
					},
					error : function(xhr, status, error) {
						// 오류가 발생한 경우
						console.error('댓글 삭제 중 오류가 발생했습니다.');
						console.error(xhr.responseText);
					}
				});
			});
		});
	});//end
</script>