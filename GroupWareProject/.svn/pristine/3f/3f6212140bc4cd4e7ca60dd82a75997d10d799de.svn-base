$(function() {
    let approvalBtn = $('#approval-btn');
    let approvalModal = $('#approval-modal');
    let actionBtn = $('#actionBtn');
    let cancelBtn = $('#cancelBtn');
    let modalExit = $('#modal-exit');
    
    approvalBtn.on('click', function(e) {
        selectDocList();
        toggleModal();
    });

    $(document).on('click', function(e) {
        if($(e.target).is(approvalModal)) {
            toggleModal();
        }
    });

    modalExit.on('click', function(e) {
        e.preventDefault();
        toggleModal();
        
		collapseAllTrees();
    });
    
    actionBtn.on('click', function() {
        var tree = $.ui.fancytree.getTree('#tree');
        var node = tree.getActiveNode();
        console.log(node);
        if(node == null) {
            showToast('양식을 선택해주세요!', 'error');
            return;
        }
        
        console.log(node.title);
        toggleModal();
        
        location.href='/approval/form';
    });
    
    cancelBtn.on('click', function() {
    	toggleModal();
    	collapseAllTrees();
	});
	
    function toggleModal() {
        approvalModal.toggleClass('show');
    }
    
    // FancyTree 스크립트 부분
    
	$("#search-input").on("keyup", function() {
		if ($("#search-input").val()) {
			searchTree();
		} else {
			collapseAllTrees();
		}
	});

	$("#tree").fancytree({
		activeVisible : true, // Make sure, active nodes are visible (expanded)
		autoActivate : true, // Automatically activate a node when it is focused using keyboard
		checkbox : false, // Show check boxes
		icon : true, // Display node icons
		keyboard : true, // Support keyboard navigation
		clickFolderMode : 2, // 1:activate, 2:expand, 3:activate and expand, 4:activate (dblclick expands)
		selectMode : 3, // 1:single, 2:multi, 3:multi-hier
		debugLevel : 2, // 0:quiet, 1:errors, 2:warnings, 3:infos, 4:debug
		filter : {
			highlight : true, // Highlight matches by wrapping inside 
			mode : "hide" // Grayout unmatched nodes (pass "hide" to remove unmatched node instead)
		},
		source : [ {
			title : "융합대학",
			key : "1",
			folder : true,
			children : [ {
				title : "학과명1",
				key : "1.1"
			}, {
				title : "학과명2",
				key : "1.2"
			} ]
		}, {
			title : "간호대학",
			key : "2",
			folder : true,
			children : [ {
				title : "학과명1",
				key : "2.1"
			}, {
				title : "학과명2",
				key : "2.2"
			} ]
		}, {
			title : "대학",
			key : "3",
			folder : true,
			children : [ {
				title : "융합전공1",
				key : "3.1"
			}, {
				title : "융합전공2",
				key : "3.2"
			} ]
		} ]
	});

	function collapseAllTrees() {
		var tree = $.ui.fancytree.getTree("#tree");
		tree.visit(function(node) {
			node.setExpanded(false);
			node.setSelected(false);
			node.removeClass("search-hi-lite");
		});
	}

	function searchTree() {
		var tree = $.ui.fancytree.getTree("#tree");
		var searchTerm = $("#search-input").val();
		tree.filterNodes(searchTerm, {
			autoExpand : true,
		});
		tree.visit(function(node) {
			if (node.title.includes(searchTerm)) {
				$(node).addClass("search-hi-lite");
			} else {
				$(node).removeClass("search-hi-lite");
			}
		});
	}
});